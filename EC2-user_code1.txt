run the docker container
sudo docker run -d -p 80:5000 flask-sample-one



tag ur image 
sudo docker tag flask -sample-one:latest flask-sample:vl




docker ps ------------------------to see container is running.

















[ec2-user@ip-10-0-0-135 A230]$ ls
app.py  apt.py  Dockerfile  requirement.txt
[ec2-user@ip-10-0-0-135 A230]$ mv requirement.txt requirements.txt
[ec2-user@ip-10-0-0-135 A230]$ sudo docker build -t flask-sample-one:latest .
Sending build context to Docker daemon   5.12kB
Step 1/9 : FROM ubuntu:latest
 ---> d131e0fa2585
Step 2/9 : RUN apt-get update -y
 ---> Using cache
 ---> d4e2cabc9e17
Step 3/9 : RUN apt-get install -y python-pip python-dev build-essential
 ---> Using cache
 ---> 7f8d5d65ea55
Step 4/9 : COPY . /app
 ---> 811ea2b15099
Step 5/9 : WORKDIR /app
 ---> Running in 0d6e4ed7eca0
Removing intermediate container 0d6e4ed7eca0
 ---> 28431ee76f4b
Step 6/9 : RUN pip install -r requirements.txt
 ---> Running in b5fd047c0bd3
Collecting Flask==0.10.1 (from -r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/db/9c/149ba60c47d107f85fe52564133348458f093dd5e6b57a5b60ab9ac517bb/Flask-0.10.1.tar.gz (544kB)
Collecting Jinja2>=2.4 (from Flask==0.10.1->-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/1d/e7/fd8b501e7a6dfe492a433deb7b9d833d39ca74916fa8bc63dd1a4947a671/Jinja2-2.10.1-py2.py3-none-any.whl (124kB)
Collecting Werkzeug>=0.7 (from Flask==0.10.1->-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/18/79/84f02539cc181cdbf5ff5a41b9f52cae870b6f632767e43ba6ac70132e92/Werkzeug-0.15.2-py2.py3-none-any.whl (328kB)
Collecting itsdangerous>=0.21 (from Flask==0.10.1->-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/76/ae/44b03b253d6fade317f32c24d100b3b35c2239807046a4c953c7b89fa49e/itsdangerous-1.1.0-py2.py3-none-any.whl
Collecting MarkupSafe>=0.23 (from Jinja2>=2.4->Flask==0.10.1->-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/fb/40/f3adb7cf24a8012813c5edb20329eb22d5d8e2a0ecf73d21d6b85865da11/MarkupSafe-1.1.1-cp27-cp27mu-manylinux1_x86_64.whl
Building wheels for collected packages: Flask
  Running setup.py bdist_wheel for Flask: started
  Running setup.py bdist_wheel for Flask: finished with status 'done'
  Stored in directory: /root/.cache/pip/wheels/e1/f2/be/1c4f307a41aad7e632f79c0242a2714ecde24b663da3519665
Successfully built Flask
Installing collected packages: MarkupSafe, Jinja2, Werkzeug, itsdangerous, Flask
Successfully installed Flask-0.10.1 Jinja2-2.10.1 MarkupSafe-1.1.1 Werkzeug-0.15.2 itsdangerous-1.1.0
Removing intermediate container b5fd047c0bd3
 ---> c9f7b7c79fec
Step 7/9 : EXPOSE 5000
 ---> Running in 53261070bef3
Removing intermediate container 53261070bef3
 ---> 0be60e0826a2
Step 8/9 : ENTRYPOINT ["python"]
 ---> Running in 2c67f15d3e70
Removing intermediate container 2c67f15d3e70
 ---> d956114f6af7
Step 9/9 : CMD ["app.py"]
 ---> Running in 43a9750776e8
Removing intermediate container 43a9750776e8
 ---> b185fb0b8306
Successfully built b185fb0b8306
Successfully tagged flask-sample-one:latest
[ec2-user@ip-10-0-0-135 A230]$ cat requirements.txt
Flask==0.10.1
[ec2-user@ip-10-0-0-135 A230]$
-----------------------------------------------------------------------------------------------------------------------------------------

Session stopped
    - Press <return> to exit tab
    - Press R to restart session
    - Press S to save terminal output to file

Network error: Software caused connection abort
Authenticating with public key "Imported-Openssh-Key: C:\Users\harshit ranta\Downloads\demo-vpc-ec2.pem"
     +--------------------------------------------------------------------+
     ¦                        • MobaXterm 11.1 •                          ¦
     ¦            (SSH client, X-server and networking tools)             ¦
     ¦                                                                    ¦
     ¦ ? SSH session to ec2-user@54.89.152.232                            ¦
     ¦   • SSH compression : ?                                            ¦
     ¦   • SSH-browser     : ?                                            ¦
     ¦   • X11-forwarding  : ?  (disabled or not supported by server)     ¦
     ¦   • DISPLAY         : 172.16.0.43:0.0                              ¦
     ¦                                                                    ¦
     ¦ ? For more info, ctrl+click on help or visit our website           ¦
     +--------------------------------------------------------------------+

Last login: Sat Apr 27 11:00:44 2019 from 42.106.214.205

       __|  __|_  )
       _|  (     /   Amazon Linux AMI
      ___|\___|___|

https://aws.amazon.com/amazon-linux-ami/2018.03-release-notes/
15 package(s) needed for security, out of 22 available
Run "sudo yum update" to apply all updates.
[ec2-user@ip-10-0-0-135 ~]$ cd A230
[ec2-user@ip-10-0-0-135 A230]$ ls
app.py  apt.py  Dockerfile  requirements.txt
[ec2-user@ip-10-0-0-135 A230]$ sudo docker run -d -p 80:5000 flask-sample-one
1498fa036819d1ee3a0a87ad13cb13307bd0a5e732266661f7fe303f6e6acf58
[ec2-user@ip-10-0-0-135 A230]$ vi app.py
[ec2-user@ip-10-0-0-135 A230]$ vi app.py
[ec2-user@ip-10-0-0-135 A230]$ sudo docker run -d -p 80:5000 flask-sample-one
85d9125ad01d819adf305060cd1c518a8602a9cc71856d5d2c604e5d96d4db7d
[ec2-user@ip-10-0-0-135 A230]$
[ec2-user@ip-10-0-0-135 A230]$ sudo docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
[ec2-user@ip-10-0-0-135 A230]$ sudo docker run  -p 80:5000 flask-sample-one
  File "app.py", line 1
    From flask import Flask
             ^
SyntaxError: invalid syntax
[ec2-user@ip-10-0-0-135 A230]$ sudo docker build -t flask-sample-one:latest .
Sending build context to Docker daemon   5.12kB
Step 1/9 : FROM ubuntu:latest
 ---> d131e0fa2585
Step 2/9 : RUN apt-get update -y
 ---> Using cache
 ---> d4e2cabc9e17
Step 3/9 : RUN apt-get install -y python-pip python-dev build-essential
 ---> Using cache
 ---> 7f8d5d65ea55
Step 4/9 : COPY . /app
 ---> b6132f9c0cb2
Step 5/9 : WORKDIR /app
 ---> Running in 2f606c093a44
Removing intermediate container 2f606c093a44
 ---> d2d43f35904e
Step 6/9 : RUN pip install -r requirements.txt
 ---> Running in d50d84f64a7d
Collecting Flask==0.10.1 (from -r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/db/9c/149ba60c47d107f85fe52564133348458f093dd5e6b57a5b60ab9ac517bb/Flask-0.10.1.tar.gz (544kB)
Collecting Jinja2>=2.4 (from Flask==0.10.1->-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/1d/e7/fd8b501e7a6dfe492a433deb7b9d833d39ca74916fa8bc63dd1a4947a671/Jinja2-2.10.1-py2.py3-none-any.whl (124kB)
Collecting Werkzeug>=0.7 (from Flask==0.10.1->-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/18/79/84f02539cc181cdbf5ff5a41b9f52cae870b6f632767e43ba6ac70132e92/Werkzeug-0.15.2-py2.py3-none-any.whl (328kB)
Collecting itsdangerous>=0.21 (from Flask==0.10.1->-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/76/ae/44b03b253d6fade317f32c24d100b3b35c2239807046a4c953c7b89fa49e/itsdangerous-1.1.0-py2.py3-none-any.whl
Collecting MarkupSafe>=0.23 (from Jinja2>=2.4->Flask==0.10.1->-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/fb/40/f3adb7cf24a8012813c5edb20329eb22d5d8e2a0ecf73d21d6b85865da11/MarkupSafe-1.1.1-cp27-cp27mu-manylinux1_x86_64.whl
Building wheels for collected packages: Flask
  Running setup.py bdist_wheel for Flask: started
  Running setup.py bdist_wheel for Flask: finished with status 'done'
  Stored in directory: /root/.cache/pip/wheels/e1/f2/be/1c4f307a41aad7e632f79c0242a2714ecde24b663da3519665
Successfully built Flask
Installing collected packages: MarkupSafe, Jinja2, Werkzeug, itsdangerous, Flask
Successfully installed Flask-0.10.1 Jinja2-2.10.1 MarkupSafe-1.1.1 Werkzeug-0.15.2 itsdangerous-1.1.0
Removing intermediate container d50d84f64a7d
 ---> 54f807e020ed
Step 7/9 : EXPOSE 5000
 ---> Running in c3f4e4376d57
Removing intermediate container c3f4e4376d57
 ---> 4f436110df56
Step 8/9 : ENTRYPOINT ["python"]
 ---> Running in 109530eb6874
Removing intermediate container 109530eb6874
 ---> 32b3c37a31e9
Step 9/9 : CMD ["app.py"]
 ---> Running in e5bce9ee407f
Removing intermediate container e5bce9ee407f
 ---> 600ed17a3a40
Successfully built 600ed17a3a40
Successfully tagged flask-sample-one:latest
[ec2-user@ip-10-0-0-135 A230]$ sudo docker run  -p 80:5000 flask-sample-one
  File "app.py", line 5
    def hello_world();
                     ^
SyntaxError: invalid syntax
[ec2-user@ip-10-0-0-135 A230]$ vi app.py
[ec2-user@ip-10-0-0-135 A230]$ sudo docker run  -p 80:5000 flask-sample-one
  File "app.py", line 5
    def hello_world();
                     ^
SyntaxError: invalid syntax
[ec2-user@ip-10-0-0-135 A230]$ vi app.py
[ec2-user@ip-10-0-0-135 A230]$ sudo docker run  -p 80:5000 flask-sample-one
  File "app.py", line 5
    def hello_world();
                     ^
SyntaxError: invalid syntax
[ec2-user@ip-10-0-0-135 A230]$ vi app.py
[ec2-user@ip-10-0-0-135 A230]$ sudo docker run  -p 80:5000 flask-sample-one
  File "app.py", line 5
    def hello_world();
                     ^
SyntaxError: invalid syntax
[ec2-user@ip-10-0-0-135 A230]$ vi app.py
[ec2-user@ip-10-0-0-135 A230]$ sudo docker built -t flask-sample-one:latest .
unknown shorthand flag: 't' in -t
See 'docker --help'.

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default "/root/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level ("debug"|"info"|"warn"|"error"|"fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/root/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/root/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/root/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  checkpoint  Manage checkpoints
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  stack       Manage Docker stacks
  swarm       Manage Swarm
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  deploy      Deploy a new stack or update an existing stack
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

[ec2-user@ip-10-0-0-135 A230]$ sudo docker run  -p 80:5000 flask-sample-one
  File "app.py", line 5
    def hello_world();
                     ^
SyntaxError: invalid syntax
[ec2-user@ip-10-0-0-135 A230]$ sudo docker build -t flask-sample-one:latest .
Sending build context to Docker daemon   5.12kB
Step 1/9 : FROM ubuntu:latest
 ---> d131e0fa2585
Step 2/9 : RUN apt-get update -y
 ---> Using cache
 ---> d4e2cabc9e17
Step 3/9 : RUN apt-get install -y python-pip python-dev build-essential
 ---> Using cache
 ---> 7f8d5d65ea55
Step 4/9 : COPY . /app
 ---> b1486fd25c9e
Step 5/9 : WORKDIR /app
 ---> Running in 60ba6667a8ea
Removing intermediate container 60ba6667a8ea
 ---> f4be8a172349
Step 6/9 : RUN pip install -r requirements.txt
 ---> Running in 8f4ae0108903
Collecting Flask==0.10.1 (from -r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/db/9c/149ba60c47d107f85fe52564133348458f093dd5e6b57a5b60ab9ac517bb/Flask-0.10.1.tar.gz (544kB)
Collecting Jinja2>=2.4 (from Flask==0.10.1->-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/1d/e7/fd8b501e7a6dfe492a433deb7b9d833d39ca74916fa8bc63dd1a4947a671/Jinja2-2.10.1-py2.py3-none-any.whl (124kB)
Collecting Werkzeug>=0.7 (from Flask==0.10.1->-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/18/79/84f02539cc181cdbf5ff5a41b9f52cae870b6f632767e43ba6ac70132e92/Werkzeug-0.15.2-py2.py3-none-any.whl (328kB)
Collecting itsdangerous>=0.21 (from Flask==0.10.1->-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/76/ae/44b03b253d6fade317f32c24d100b3b35c2239807046a4c953c7b89fa49e/itsdangerous-1.1.0-py2.py3-none-any.whl
Collecting MarkupSafe>=0.23 (from Jinja2>=2.4->Flask==0.10.1->-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/fb/40/f3adb7cf24a8012813c5edb20329eb22d5d8e2a0ecf73d21d6b85865da11/MarkupSafe-1.1.1-cp27-cp27mu-manylinux1_x86_64.whl
Building wheels for collected packages: Flask
  Running setup.py bdist_wheel for Flask: started
  Running setup.py bdist_wheel for Flask: finished with status 'done'
  Stored in directory: /root/.cache/pip/wheels/e1/f2/be/1c4f307a41aad7e632f79c0242a2714ecde24b663da3519665
Successfully built Flask
Installing collected packages: MarkupSafe, Jinja2, Werkzeug, itsdangerous, Flask
Successfully installed Flask-0.10.1 Jinja2-2.10.1 MarkupSafe-1.1.1 Werkzeug-0.15.2 itsdangerous-1.1.0
Removing intermediate container 8f4ae0108903
 ---> d05ae43f284f
Step 7/9 : EXPOSE 5000
 ---> Running in f610b54b29dc
Removing intermediate container f610b54b29dc
 ---> 2a0ebb8f7c4e
Step 8/9 : ENTRYPOINT ["python"]
 ---> Running in 081f8fe9117d
Removing intermediate container 081f8fe9117d
 ---> fbc225a1827e
Step 9/9 : CMD ["app.py"]
 ---> Running in dec1e653565f
Removing intermediate container dec1e653565f
 ---> 24a0014f5e78
Successfully built 24a0014f5e78
Successfully tagged flask-sample-one:latest
[ec2-user@ip-10-0-0-135 A230]$ sudo docker run  -p 80:5000 flask-sample-one
 * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 236-035-556
42.106.214.205 - - [27/Apr/2019 12:12:38] "GET / HTTP/1.1" 200 -
42.106.214.205 - - [27/Apr/2019 12:12:40] "GET /favicon.ico HTTP/1.1" 404 -
42.106.214.205 - - [27/Apr/2019 12:12:57] "GET / HTTP/1.1" 200 -

